name: MSBuild

## Haha...the suggested and default environment ${{env.GITHUB_WORKSPACE}} is not defined and gives error despite the documentation talking and using this variable
## It seems the correct one should be ${{ github.workspace }}...why should you bother github?
## https://github.community/t/github-workspace-variable-empty/137517/3

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  PROJECT_ROOT: ${{ github.workspace }}
  OUTPUT_PATH: ${{ github.workspace }}\Output
  SOLUTION_FILE_PATH: ${{ github.workspace }}\Server\3DServer
  RELEASE_FILE_PATH: ${{ github.workspace }}\Server\3DServer\Release
  TESTS_FILE_PATH: ${{ github.workspace }}\Server\3DServer\CodeTests
  
  CLIENT_SOLUTION_FILE_PATH: ${{ github.workspace }}\Client\scene-renderer
  WEBSITE_ROOT_FILE_PATH: ${{ github.workspace }}\Client\www
  WEBSITE_SCRIPTS_FILE_PATH: ${{ github.workspace }}\Client\www\assets\js
  
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release #Compile and Test on release version
  BUILD_PLATFORM: x86
  
jobs:
  tests_server:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Echo environment
      run: |
        echo ${{ github.workspace }} 
        echo ${{env.SOLUTION_FILE_PATH}}\${{env.BUILD_CONFIGURATION}}\3DServer.exe
      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{ github.workspace }} 
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Server
      working-directory: ${{ github.workspace }} 
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}

    - name: Execute Unit Tests
      working-directory: ${{ github.workspace }} 
      run: ${{env.SOLUTION_FILE_PATH}}\${{env.BUILD_CONFIGURATION}}\CodeTests.exe
      
    - name: Save artifact
      uses: actions/upload-artifact@v2
      with:
        name: server-artifact
        path: ${{env.SOLUTION_FILE_PATH}}\${{env.BUILD_CONFIGURATION}}\3DServer.exe
        if-no-files-found: error 
        retention-days: 1
        
      
  tests_client:
    runs-on: windows-latest
    needs: tests_server
    if: success()
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'
        
    - name: Install dependencies    
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: npm install
      
    - name: Build project
      working-directory:  ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: npm run build
      
    - name: Running tests 
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: npm test
      
    - name: Save artifact
      uses: actions/upload-artifact@v2
      with:
        name: client-artifact
        path: ${{ env.CLIENT_SOLUTION_FILE_PATH }}\index.js
        if-no-files-found: error 
        retention-days: 1
        
  publish:
    runs-on: windows-latest
    needs: tests_client
    if: success() && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    - name: Echo environment
      run: |
        echo ${{ github.workspace }} 
        echo ${{env.SOLUTION_FILE_PATH}}\${{env.BUILD_CONFIGURATION}}\3DServer.exe
        
    - name: Download server artifact
      uses: actions/download-artifact@v2
      with:
        name: server-artifact
        path: ${{ env.OUTPUT_PATH }}
        
    - name: Download client artifact
      uses: actions/download-artifact@v2
      with:
        name: client-artifact
        path: ${{ env.WEBSITE_SCRIPTS_FILE_PATH }}\index.js
        
    - name: Test
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: |
          dir "${{ env.WEBSITE_ROOT_FILE_PATH }}"
          dir "${{env.RELEASE_FILE_PATH}}"
          dir "${{ env.OUTPUT_PATH }}"
          
    - name: Publishing client library
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: |
          git config user.name 'AntonVonDelta'
          git config user.email '25268629+AntonVonDelta@users.noreply.github.com'
          git add index.js ${{ env.WEBSITE_SCRIPTS_FILE_PATH }}\index.js
          git commit -am "Automated build of client library"
          git push --force

    - name: Test
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: |
          dir "${{ env.WEBSITE_ROOT_FILE_PATH }}"
          dir "${{env.RELEASE_FILE_PATH}}"
          dir "${{ env.OUTPUT_PATH }}"
          
    - name: Constructing output folder
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: |
          xcopy "${{ env.WEBSITE_ROOT_FILE_PATH }}" "${{ env.OUTPUT_PATH }}\" /s /e /y
          xcopy "${{env.RELEASE_FILE_PATH}}" "${{ env.OUTPUT_PATH }}\" /s /e /y
          dir "${{ env.OUTPUT_PATH }}"
          
    - name: Test
      working-directory: ${{ env.CLIENT_SOLUTION_FILE_PATH }}
      run: |
          dir "${{ env.WEBSITE_ROOT_FILE_PATH }}"
          dir "${{env.RELEASE_FILE_PATH}}"
          dir "${{ env.OUTPUT_PATH }}"
          
    - name: Archive project
      uses: papeloto/action-zip@v1
      with:
        files: ${{ env.OUTPUT_PATH }}
        recursive: true
        dest: remote3d.zip

    - name: Publish release version
      uses: ncipollo/release-action@v1
      with:
        artifacts: remote3d.zip
        allowUpdates: true
        artifactErrorsFailBuild: true
        replacesArtifacts: true
        tag: "latest"
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: "master"
